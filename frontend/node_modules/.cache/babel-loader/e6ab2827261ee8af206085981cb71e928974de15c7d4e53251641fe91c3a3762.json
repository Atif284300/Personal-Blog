{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\blog-platform\\\\frontend\\\\src\\\\components\\\\BlogPost.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPost = ({\n  post,\n  onDelete\n}) => {\n  const formatDate = dateString => {\n    const options = {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"blog-post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"By \", post.author, \" \\u2022 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Created: \", formatDate(post.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \\u2022 Updated: \", formatDate(post.updatedAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-content\",\n      children: post.content.length > 300 ? `${post.content.substring(0, 300)}...` : post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), post.tags && post.tags.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-tags\",\n      children: post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        children: [\"#\", tag]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/edit/${post._id}`,\n        className: \"btn btn-secondary\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(post._id),\n        className: \"btn btn-danger\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = BlogPost;\nexport default BlogPost;\nvar _c;\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","BlogPost","post","onDelete","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString","undefined","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","author","createdAt","updatedAt","content","length","substring","tags","map","tag","index","to","_id","onClick","_c","$RefreshReg$"],"sources":["D:/react/blog-platform/frontend/src/components/BlogPost.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BlogPost = ({ post, onDelete }) => {\r\n  const formatDate = (dateString) => {\r\n    const options = {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <article className=\"blog-post\">\r\n      <h2>{post.title}</h2>\r\n\r\n      <div className=\"blog-meta\">\r\n        <span>By {post.author} • </span>\r\n        <span>Created: {formatDate(post.createdAt)}</span>\r\n        {post.updatedAt !== post.createdAt && (\r\n          <span> • Updated: {formatDate(post.updatedAt)}</span>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"blog-content\">\r\n        {post.content.length > 300\r\n          ? `${post.content.substring(0, 300)}...`\r\n          : post.content}\r\n      </div>\r\n\r\n      {post.tags && post.tags.length > 0 && (\r\n        <div className=\"blog-tags\">\r\n          {post.tags.map((tag, index) => (\r\n            <span key={index} className=\"tag\">\r\n              #{tag}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"blog-actions\">\r\n        <Link to={`/edit/${post._id}`} className=\"btn btn-secondary\">\r\n          Edit\r\n        </Link>\r\n        <button onClick={() => onDelete(post._id)} className=\"btn btn-danger\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default BlogPost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}